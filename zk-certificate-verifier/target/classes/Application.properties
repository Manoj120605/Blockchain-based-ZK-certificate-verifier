# application.properties - Main Configuration File

# Application Configuration
spring.application.name=zk-proof-certificate-verifier
server.port=8080
server.servlet.context-path=/

# Profile Configuration
spring.profiles.active=dev

# Database Configuration (H2 In-Memory for Demo)
spring.datasource.url=jdbc:h2:mem:zkproof_db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# H2 Console (Development only)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=false

# Thymeleaf Configuration
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.indent-output=true

# Logging Configuration
logging.level.com.zkproof.certverifier=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Security Configuration
spring.security.user.name=admin
spring.security.user.password=admin123
spring.security.user.roles=ADMIN

# API Documentation (Swagger/OpenAPI)
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# ZK-Proof Custom Configuration
zkproof.challenge.expiry-minutes=5
zkproof.proof.max-size=10240
zkproof.verification.timeout-seconds=30
zkproof.cache.enabled=true
zkproof.cache.ttl-minutes=60

# Blockchain Configuration
blockchain.network=ethereum-testnet
blockchain.provider.url=https://rinkeby.infura.io/v3/YOUR_INFURA_PROJECT_ID
blockchain.contract.address=0x1234567890123456789012345678901234567890
blockchain.gas.limit=21000
blockchain.gas.price=20000000000

# Certificate Storage Configuration
certificate.storage.type=memory
certificate.storage.backup.enabled=false
certificate.storage.encryption.enabled=true

# Verification Configuration
verification.batch.max-size=100
verification.result.cache.enabled=true
verification.result.cache.ttl-hours=24
verification.audit.enabled=true

# Rate Limiting
rate.limit.enabled=true
rate.limit.requests-per-minute=60
rate.limit.verification-per-hour=100

# Monitoring and Health
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.info.env.enabled=true

# Application Information
info.app.name=${spring.application.name}
info.app.description=Zero-Knowledge Proof Certificate Verification System
info.app.version=1.0.0
info.app.author=ZK-Proof Team

# ===================================
# application-dev.properties (Development Profile)
# ===================================

# Development specific settings
debug=true
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# Development Logging
logging.level.root=INFO
logging.level.com.zkproof=DEBUG

# Development Database - Keep data during restart
spring.datasource.url=jdbc:h2:file:./data/zkproof_dev_db;AUTO_SERVER=TRUE
spring.jpa.hibernate.ddl-auto=update

# Development Security - Disable for easier testing
spring.security.enabled=false
zkproof.security.jwt.enabled=false

# Development CORS
cors.allowed-origins=http://localhost:3000,http://localhost:8080
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*

# ===================================
# application-prod.properties (Production Profile)
# ===================================

# Production Database Configuration
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/zkproof_prod}
spring.datasource.username=${DB_USERNAME:zkproof_user}
spring.datasource.password=${DB_PASSWORD:secure_password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Production JPA Settings
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Production Security
spring.security.enabled=true
zkproof.security.jwt.enabled=true
zkproof.security.jwt.secret=${JWT_SECRET:your-256-bit-secret-key}
zkproof.security.jwt.expiration-hours=24

# Production Logging
logging.level.root=WARN
logging.level.com.zkproof=INFO
logging.file.name=logs/zkproof-application.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.total-size-cap=1GB

# Production Blockchain Settings
blockchain.provider.url=${BLOCKCHAIN_PROVIDER_URL}
blockchain.contract.address=${BLOCKCHAIN_CONTRACT_ADDRESS}
blockchain.private-key=${BLOCKCHAIN_PRIVATE_KEY}

# Production Caching
spring.cache.type=redis
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:}

# Production Monitoring
management.endpoints.web.exposure.include=health,metrics,prometheus
management.endpoint.health.show-details=when-authorized

# SSL Configuration (Production)
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store=${SSL_KEYSTORE_PATH:}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:}
server.ssl.key-store-type=PKCS12

# ===================================
# application-test.properties (Testing Profile)
# ===================================

# Test Database
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
spring.jpa.hibernate.ddl-auto=create-drop

# Test Logging
logging.level.org.springframework.test=DEBUG
logging.level.com.zkproof=DEBUG

# Test Security
spring.security.enabled=false

# Test ZK-Proof Settings
zkproof.challenge.expiry-minutes=1
zkproof.verification.timeout-seconds=5